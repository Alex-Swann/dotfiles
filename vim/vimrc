" .vimrc
" this file is managed by git
" github.com/zuzak/dotfiles
"
" load plugins
source ~/.vim/bundle/pathogen/autoload/pathogen.vim
execute pathogen#infect()
execute pathogen#helptags()

set nocompatible            " disable legacy

syntax enable
colorscheme desert
set number

set encoding=utf-8
set showcmd                 " display incomplete commands

filetype plugin indent on " load file specific plugins/indentation

" indentation
set nowrap
set tabstop=4               " set tab key to insert 2 spaces
set shiftwidth=4            " set << and >> to move 2 spaces
set expandtab               " convert tabs to spaces
set autoindent              " use indentation of previous line
set smartindent             " indent magically

" search
set hlsearch                " highlight search matches
set incsearch               " incremental (instant) searching
set ignorecase              " ignore case in searches
set smartcase               " ...unless mixed-case
set magic                   " greppy regexp

set laststatus=2            " always show status line

"match Error /\s\+$/          " give trailing whitespace the error highlight


" force hjkl usage
noremap <Up> ""
noremap! <Up> <Esc>
noremap <Down> ""
noremap! <Down> <Esc>
noremap <Left> ""
noremap! <Left> <Esc>
noremap <Right> ""
noremap! <Right> <Esc>

" override four tabs for javascript
autocmd Filetype jade setlocal ts=2 sw=2
autocmd Filetype js setlocal ts=2 sw=2

autocmd Filetype php setlocal noexpandtab
autocmd Filetype tex setlocal spell
autocmd Filetype ruby setlocal expandtab
" highlight extraneous whitespace (ignoring current line)
autocmd BufEnter * match Error /\s\+$/
autocmd InsertEnter * match Error /\s\+\%#\@<!$/
autocmd InsertLeave * match Error /\s\+$/

"Use TAB to complete when typing words, else inserts TABs as usual.
"Uses dictionary and source files to find matching words to complete.
function! Tab_Or_Complete()
    if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '^\w'
        return "\<C-N>"
    else
        return "\<Tab>"
    endif
endfunction
inoremap <Tab> <C-R>=Tab_Or_Complete()<CR>
highlight Pmenu ctermfg=grey ctermbg=darkgrey

let g:tex_flavor='latex'
let g:Tex_DefaultTargetFormat='pdf'

set guioptions-=m " no menu bar
set guioptions-=T " no toolbar
set guioptions-=r " no right scroll
set guioptions-=L " no left scroll
"set guifont=monofur

let g:syntastic_html_checkers = ['w3']
let g:syntastic_vim_checkers = ['vint']

let g:email = 'douglas@chippy.ch'

if v:version < 703
	finish
endif

highlight ColorColumn ctermbg=235 guibg=#2c2d27
set colorcolumn=81,82,83,84,85

let g:pymode_lint_write = 0
let g:syntastic_python_python_exec = '/usr/bin/python3'

let g:syntastic_python_checkers = [ 'python', 'pep8', 'pyflakes' ]

":w!! to save as root
ca w!! w !sudo tee >/dev/null "%"

set shell=/bin/bash


set modelines=5

let g:airline#extensions#tabline#enabled = 1
